{"version":3,"sources":["assets/header.jpg","actions/types.js","reducers/index.js","serviceWorker.js","containers/Home.jsx","containers/FoodsList.jsx","actions/index.js","components/SliderWeight.jsx","containers/FoodsForm.jsx","App.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","LIST_FOODS","SELECT_FOOD","initialState","list","aw","getAlimentos","item","combineReducers","foods","state","arguments","length","undefined","action","type","Object","objectSpread","find","f","id","payload","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Main","styled","main","_templateObject","header","CallToAction","div","_templateObject2","Title","h1","_templateObject3","Description","_templateObject4","Button","Link","_templateObject5","Home","react_default","a","createElement","Fragment","to","Header","FoodsList_templateObject","BackLink","FoodsList_templateObject2","FoodsList_templateObject3","FoodsList_templateObject4","List","ul","FoodsList_templateObject5","Item","li","_templateObject6","FoodButton","_templateObject7","FoodsList","handleList","this","props","io","size","FoodsList_Title","FoodsList_Main","map","key","concat","nome","React","PureComponent","connect","dispatch","injectSheet","slider","& .rc-slider-track","backgroundColor","& .rc-slider-handle","width","height","marginTop","marginLeft","border","borderRadius","transform","userSelect","touchCallout","&:focus","boxShadow","_ref","handleFormat","handleChange","classes","rc_slider_es","onChange","min","max","step","handle","_ref2","value","index","dragging","restProps","objectWithoutProperties","rc_tooltip_es","prefixCls","overlay","visible","placement","overlayStyle","touchAction","Handle","assign","className","FoodsForm_templateObject","FoodsForm_templateObject2","FoodsForm_templateObject3","FoodsForm_templateObject4","FoodsForm_templateObject5","Footer","footer","FoodsForm_templateObject6","Output","FoodsForm_templateObject7","FoodsForm","output","handleCalculate","_this","setState","formata","pesoBruto","_this$props","handleSelect","params","FoodsForm_Header","FoodsForm_BackLink","FoodsForm_Title","FoodsForm_Description","FoodsForm_Main","components_SliderWeight","selectFood","GlobalStyle","createGlobalStyle","App_templateObject","App","HashRouter","Route","path","exact","component","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.56409f34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.69b67dec.jpg\";","export const LIST_FOODS = 'LIST_FOODS';\nexport const SELECT_FOOD = 'SELECT_FOOD';\n","import { combineReducers } from 'redux';\nimport aw from 'alimentometro-wrapper';\nimport { LIST_FOODS, SELECT_FOOD } from '../actions/types';\n\nconst initialState = {\n  list: aw.getAlimentos(),\n  item: {},\n};\n\nfunction foods(state = initialState, action) {\n  switch (action.type) {\n    case LIST_FOODS:\n      return { ...state, list: aw.getAlimentos() };\n    case SELECT_FOOD:\n      return { ...state, item: state.list.find(f => f.id === +action.payload.id) };\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  foods,\n});\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport header from '../assets/header.jpg';\n\nconst Main = styled.main`\n  display: flex;\n  align-items: flex-end;\n  height: 100vh;\n  background-color: #f1f1f1;\n  background-image: url(${header});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  box-sizing: border-box;\n`;\n\nconst CallToAction = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 4rem;\n  padding: 1rem;\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: #007aff;\n  text-align: center;\n  margin: 0;\n`;\n\nconst Description = styled.p`\n  text-align: center;\n  margin: 0.5rem 1rem 2rem 1rem;\n`;\n\nconst Button = styled(Link)`\n  width: 100%;\n  max-width: 320px;\n  color: #fff;\n  text-align: center;\n  text-decoration: none;\n  background-color: #007aff;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n`;\n\nfunction Home() {\n  return (\n    <>\n      <Main>\n        <CallToAction>\n          <Title>Alimentômetro</Title>\n          <Description>Saiba quanto rende um alimento para não errar na sua dieta.</Description>\n          <Button to=\"/foods\">Alimentos</Button>\n        </CallToAction>\n      </Main>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\nimport { listFoods } from '../actions';\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  border-bottom: solid 1px #e0e0e0;\n  box-sizing: border-box;\n  z-index: 1;\n`;\n\nconst BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  color: #007aff;\n  text-decoration: none;\n  line-height: 1;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.2rem;\n  text-align: center;\n  margin: 0rem;\n`;\n\nconst Main = styled.main`\n  width: 100%;\n  overflow-y: auto;\n`;\n\nconst List = styled.ul`\n  margin: 0;\n  padding-left: 0.5rem;\n  list-style: none;\n`;\n\nconst Item = styled.li`\n  &:not(:last-child) a {\n    border-bottom: 1px solid #e0e0e0;\n  }\n`;\n\nconst FoodButton = styled(Link)`\n  display: block;\n  color: #000;\n  line-height: 1;\n  text-decoration: none;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n`;\n\nclass FoodsList extends React.PureComponent {\n  componentDidMount() {\n    const { handleList } = this.props;\n    handleList();\n  }\n\n  render() {\n    const { list } = this.props;\n    return (\n      <>\n        <Header>\n          <BackLink to=\"/\">\n            <IoIosArrowBack size=\"1.5rem\" />\n            Tela Inicial\n          </BackLink>\n          <Title>Alimentos</Title>\n        </Header>\n\n        <Main>\n          <List>\n            {list.map(f => (\n              <Item key={f.id}>\n                <FoodButton to={`/foods/${f.id}`}>{f.nome}</FoodButton>\n              </Item>\n            ))}\n          </List>\n        </Main>\n      </>\n    );\n  }\n}\n\nFoodsList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      nome: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  handleList: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    list: state.foods.list,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleList: () => dispatch(listFoods()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodsList);\n","import { LIST_FOODS, SELECT_FOOD } from './types';\n\nexport const listFoods = () => ({\n  type: LIST_FOODS,\n});\n\nexport const selectFood = id => ({\n  type: SELECT_FOOD,\n  payload: { id },\n});\n","import 'rc-slider/assets/index.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport injectSheet from 'react-jss';\n\nfunction SliderWeight({ handleFormat, handleChange, classes }) {\n  const handle = ({ value, dragging, index, ...restProps }) => (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={handleFormat(value)}\n      visible\n      placement=\"top\"\n      key={index}\n      overlayStyle={{\n        userSelect: 'none',\n        touchCallout: 'none',\n        touchAction: 'none',\n      }}\n    >\n      <Slider.Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n\n  handle.propTypes = {\n    value: PropTypes.string.isRequired,\n    dragging: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n  };\n\n  return (\n    <Slider\n      onChange={handleChange}\n      min={0}\n      max={5000}\n      step={100}\n      handle={handle}\n      className={classes.slider}\n    />\n  );\n}\n\nSliderWeight.propTypes = {\n  handleFormat: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  classes: PropTypes.shape({\n    slider: PropTypes.string,\n  }).isRequired,\n};\n\nexport default injectSheet({\n  slider: {\n    '& .rc-slider-track': {\n      backgroundColor: '#007aff',\n    },\n\n    '& .rc-slider-handle': {\n      width: '30px',\n      height: '30px',\n      marginTop: '12px',\n      marginLeft: '-15px',\n      backgroundColor: '#007aff',\n      border: 'none',\n      borderRadius: '50% 0 50% 50%',\n      transform: 'rotate(-45deg)',\n      userSelect: 'none',\n      touchCallout: 'none',\n\n      '&:focus': {\n        boxShadow: 'none',\n      },\n    },\n  },\n})(SliderWeight);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\nimport aw from 'alimentometro-wrapper';\nimport SliderWeight from '../components/SliderWeight';\nimport { selectFood } from '../actions';\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  border-bottom: solid 1px #e0e0e0;\n  box-sizing: border-box;\n  z-index: 1;\n`;\n\nconst BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  color: #007aff;\n  text-decoration: none;\n  line-height: 1;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.2rem;\n  text-align: center;\n  margin: 0;\n`;\n\nconst Description = styled.p`\n  text-align: center;\n  margin-top: 0.5rem;\n  margin-bottom: 0;\n  line-height: 1;\n`;\n\nconst Main = styled.main`\n  display: flex;\n  align-items: center;\n  flex: 1;\n  padding-right: 2.5rem;\n  padding-left: 2.5rem;\n  box-sizing: border-box;\n`;\n\nconst Footer = styled.footer`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 54px;\n  width: 100%;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  border-top: solid 1px #e0e0e0;\n  box-sizing: border-box;\n  z-index: 1;\n`;\n\nconst Output = styled.p`\n  text-align: center;\n  margin: 0;\n`;\n\nclass FoodsForm extends React.PureComponent {\n  state = {\n    output: '0g',\n  };\n\n  componentDidMount() {\n    const { handleSelect, match } = this.props;\n    handleSelect(match.params.id);\n  }\n\n  handleCalculate = value => {\n    const { item } = this.props;\n    this.setState({\n      output: aw.formata(item.pesoBruto * value),\n    });\n  };\n\n  render() {\n    const { item } = this.props;\n    const { output } = this.state;\n    return (\n      <>\n        <Header>\n          <BackLink to=\"/foods\">\n            <IoIosArrowBack size=\"1.5rem\" />\n            Alimentos\n          </BackLink>\n          <Title>{item.nome}</Title>\n          <Description>Quanto você precisa consumir?</Description>\n        </Header>\n\n        <Main>\n          <SliderWeight\n            handleFormat={value => aw.formata(value)}\n            handleChange={this.handleCalculate}\n          />\n        </Main>\n\n        <Footer>\n          <Output>\n            Prepare\n            <b>{` ${output}.`}</b>\n          </Output>\n        </Footer>\n      </>\n    );\n  }\n}\n\nFoodsForm.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.number,\n    nome: PropTypes.string,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node,\n    }).isRequired,\n  }).isRequired,\n  handleSelect: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    item: state.foods.item,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleSelect: id => dispatch(selectFood(id)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodsForm);\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './containers/Home';\nimport FoodsList from './containers/FoodsList';\nimport FoodsForm from './containers/FoodsForm';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <>\n        <GlobalStyle />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/foods\" exact component={FoodsList} />\n        <Route path=\"/foods/:id\" component={FoodsForm} />\n      </>\n    </HashRouter>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu,\n    Cantarell, \"Helvetica Neue\", sans-serif;\n  }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}